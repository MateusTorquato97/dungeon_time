events {
    worker_connections 1024;
}

http {
    # Define quais status codes devem ser logados
    map $status $loggable {
        ~^[23]  0;    # Ignora status 2xx e 3xx
        101     0;    # Ignora conexões WebSocket (101)
        default 1;    # Loga apenas erros (4xx e 5xx)
    }

    # Define o formato do log
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';

    # Aplica a condição de log
    access_log /var/log/nginx/access.log main if=$loggable;

    upstream backend {
        server backend:3000;
    }

    upstream chat {
        server chat:3002;
    }

    upstream blackjack {
        server blackjack:3003;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /socket.io/ {
            proxy_pass http://chat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

    }
} 